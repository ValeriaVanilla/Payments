@model  IEnumerable<Payments.Models.payment>


<html>
<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/Content/all.min.css">
    <link rel="stylesheet" href="~/Content/PaymentDataStyle.css">
</head>

<body>

    @if (TempData["Updated"] != null)
    {
        <div class="alert alert-success">
            @TempData["Updated"]
            <button type="button" class="close" data-dismiss="alert">
                <span>&times;</span>
            </button>
        </div>
    }

    @if (TempData["Deleted"] != null)
    {
        <div class="alert alert-danger">
            @TempData["Deleted"]
            <button type="button" class="close" data-dismiss="alert">
                <span>&times;</span>
            </button>
        </div>
    }
    <h2> Payment History </h2>
    <div style="overflow-x:auto">
    <table id="tab" class="table table-striped">
        <thead>
            <tr>
                <th>
                    <b>Reference Number</b>
                </th>
                <th>
                    <b>Amount</b>
                </th>
                <th>
                    <b>Description</b>
                </th>
                <th>
                    <b>Beneficiary</b>
                </th>
                <th>
                    <b>Date</b>
                </th>
                <th>
                    <b>Options</b>
                </th>
                <th></th>
            <tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReferenceNo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Amount) $
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Beneficiary)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @using (Html.BeginForm("DeletePayment", "Payment", new { referenceNo = item.ReferenceNo }, FormMethod.Post, new { onsubmit = "return confirm('Are you sure you want to delete this payment?');" }))
                        {
                            <a id="updateBtn" href="@Url.Action("ModifyPayment","Payment", new {referenceNo=item.ReferenceNo})" title="Update Payment"><i class="fas fa-edit fa-1x" style="color:goldenrod;"></i></a>
                            <button id="deleteBtn" type="submit" title="Delete Payment"><i class="fas fa-trash-alt fa-1x" style="color:firebrick"></i></button>
                        }
                    </td>
                    <td>
                        <input type="checkbox" class=row-checkbox value="@item.ReferenceNo" />
                    </td>
                </tr>
            }
        </tbody>

    </table>
</div>
    <div class="pages">
        <ul class="pagination pull-right">
            @if (ViewBag.CurrentPage > 1)
            {
                <li><a href="@Url.Action("ViewPayments", new { page = ViewBag.CurrentPage - 1 })">&laquo;</a></li>
            }
            @for (int i = 1; i <= ViewBag.PageCount; i++)
            {
                <li class="@(ViewBag.CurrentPage == i ? "active" : "")"><a href="@Url.Action("ViewPayments", new { page = i })">@i</a></li>
            }
            @if (ViewBag.CurrentPage < ViewBag.PageCount)
            {
                <li><a href="@Url.Action("ViewPayments", new { page = ViewBag.CurrentPage + 1 })">&raquo;</a></li>
            }
        </ul>
    </div>


    <form>
        <div class="selectionButtons" style="display:flex;gap:15px;">
            <button type="submit" id="clearButton" onclick="clearSelection()" style="display: none;">Clear selection</button>
            <button type="submit" id="deleteButton" onclick="deleteSelection()" style="display: none;">Delete selected items</button>
        </div>
    </form>


    <script>
        const selected = [];

        document.querySelectorAll('.row-checkbox').forEach((checkbox) => {
            checkbox.addEventListener('change', ({ target }) => {
                const id = parseInt(target.getAttribute('value'));
                target.checked ? selected.push(id) : selected.splice(selected.indexOf(id), 1);
                updateButtonVisibility();
            });
        });

        function updateButtonVisibility() {
            const deleteButton = document.getElementById('deleteButton');
            const clearButton = document.getElementById('clearButton');
            deleteButton.style.display = selected.length > 1 ? 'block' : 'none';
            clearButton.style.display = selected.length > 1 ? 'block' : 'none';
        }

        function clearSelection() {
            selected.length = 0;
            updateButtonVisibility();
            document.querySelectorAll('.row-checkbox').forEach((checkbox) => {
                checkbox.checked = false;
            });
        }

        function deleteSelection() {
            if (confirm('Are you sure you want to delete these payments?')) {
                const url = '/Payment/DeleteSelectedPayments';
                $.post(url, { ReferenceNo: selected.map(ReferenceNo => parseInt(ReferenceNo)) });
            }
        }

    </script>

</body>
</html>